# Contains data for map translation

module Doocr
  #
  # LineDef attributes.
  #

  # Solid, is an obstacle.
  BLOCKING = 1

  # Blocks monsters only.
  BLOCKMONSTERS = 2

  # Backside will not be present at all
  #  if not two sided.
  TWOSIDED = 4

  # If a texture is pegged, the texture will have
  # the end exposed to air held constant at the
  # top or bottom of the texture (stairs or pulled
  # down things) and will move with a height change
  # of one of the neighbor sectors.
  # Unpegged textures allways have the first row of
  # the texture at the top pixel of the line for both
  # top and bottom textures (use next to windows).

  # upper texture unpegged
  DONTPEGTOP = 8

  # lower texture unpegged
  DONTPEGBOTTOM = 16

  # In AutoMap: don't map as two sided: IT'S A SECRET!
  SECRET = 32

  # Sound rendering: don't let sound cross two of these.
  SOUNDBLOCK = 64

  # Don't draw on the automap at all.
  DONTDRAW = 128

  # Set if already seen, thus drawn in automap.
  MAPPED = 256

  # BSP node structure.

  # Indicate a leaf.
  SUBSECTOR = 0x8000

  #
  # Map level types.
  # The following data structures define the persistent format
  # used in the lumps of the WAD files.
  #

  # A single Vertex.
  alias MapVertex = ::WAD::Map::Vertex

  # A SideDef, defining the visual appearance of a wall,
  # by setting textures and offsets.
  alias MapSidedef = WAD::Map::Sidedef

  # A LineDef, as used for editing, and as input
  # to the BSP builder.
  alias MapLinedef = WAD::Map::Linedef

  # Sector definition, from editing.
  alias MapSector = WAD::Map::Sector

  # SubSector, as generated by BSP.
  alias MapSsector = WAD::Map::Ssector

  # LineSeg, generated by splitting LineDefs
  # using partition lines selected by BSP builder.
  alias MapSeg = WAD::Map::Seg

  alias MapNode = WAD::Map::Node

  # Thing definition, position, orientation and type,
  # plus skill/visibility flags and attributes.
  alias MapThing = WAD::Map::Thing

  # Lump order in a map WAD: each map needs a couple of lumps
  # to provide a complete scene geometry description.
  enum MapLumpOrder
    Label    # A separator, name, ExMx or MAPxx
    Things   # Monsters, items..
    LineDefs # LineDefs, from editing
    SideDefs # SideDefs, from editing
    Vertexes # Vertices, edited and BSP splits generated
    Segs     # LineSegs, from LineDefs split by BSP
    SSectors # SubSectors, list of LineSegs
    Nodes    # BSP nodes
    Sectors  # Sectors, from editing
    Reject   # LUT, sector-sector visibility
    Blockmap # LUT, motion clipping, walls/grid element
  end
end
